-- Samurai Hub - MM2 + 99 Nights Support with Enhanced Features (FINAL COMPLETE REWRITE)
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer

-- Game Detection
local MM2_GAME_IDS = {142823291, 335132309}
local NIGHTS_99_GAME_ID = 126509999114328 -- Updated ID
local NIGHTS_99_LOBBY_ID = 7326934954 -- Lobby ID
local currentGame = nil

-- Determine which game we're in
local function detectGame()
    for _, gameId in pairs(MM2_GAME_IDS) do
        if game.PlaceId == gameId then
            return "MM2"
        end
    end
    
    if game.PlaceId == NIGHTS_99_GAME_ID then
        return "99NIGHTS"
    end
    
    if game.PlaceId == NIGHTS_99_LOBBY_ID then
        return "99NIGHTS_LOBBY"
    end
    
    return "UNSUPPORTED"
end

currentGame = detectGame()

-- Device Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Key System Configuration (UPDATED WITH FOREST KEY)
local function getKeyForGame(gameType)
    local keys = {
        MM2 = "Upd13",
        ["99NIGHTS"] = "forest",
        ["99NIGHTS_LOBBY"] = "forest"
    }
    return keys[gameType] or "INVALID"
end

local SAVE_KEY = "SamuraiHub_SavedKey_" .. currentGame .. "_" .. player.UserId
local REQUIRED_KEY = getKeyForGame(currentGame)

local function isKeySaved()
    if isfile and readfile and isfile(SAVE_KEY .. ".txt") then
        return readfile(SAVE_KEY .. ".txt") == REQUIRED_KEY
    end
    return false
end

local function saveKey()
    if writefile then
        writefile(SAVE_KEY .. ".txt", REQUIRED_KEY)
    end
end

-- Create 99 Nights Lobby Screen (UPDATED TEXT)
local function create99NightsLobbyScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NightsLobbyScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 250) or UDim2.new(0, 450, 0, 220)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Join the game first"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "Please join a 99 Nights game to use the script..."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    -- Auto destroy after 5 seconds
    task.spawn(function()
        task.wait(5)
        if screenGui and screenGui.Parent then
            screenGui:Destroy()
        end
        if blurEffect and blurEffect.Parent then
            blurEffect:Destroy()
        end
    end)
    
    return screenGui, blurEffect
end

-- Create unsupported game screen
local function createUnsupportedGameScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UnsupportedGameScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 500, 0, 350)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Game Not Supported"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "Sorry, this game isn't supported with Samurai Hub yet..."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    local discordBtn = Instance.new("TextButton")
    discordBtn.Size = UDim2.new(0, 140, 0, 50)
    discordBtn.Position = UDim2.new(0.5, -210, 1, -80)
    discordBtn.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    discordBtn.Text = "Discord"
    discordBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    discordBtn.TextSize = isMobile and 16 or 18
    discordBtn.Font = Enum.Font.GothamBold
    discordBtn.Parent = mainFrame
    
    local discordCorner = Instance.new("UICorner")
    discordCorner.CornerRadius = UDim.new(0, 12)
    discordCorner.Parent = discordBtn
    
    local mm2Btn = Instance.new("TextButton")
    mm2Btn.Size = UDim2.new(0, 140, 0, 50)
    mm2Btn.Position = UDim2.new(0.5, -70, 1, -80)
    mm2Btn.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    mm2Btn.Text = "Join MM2"
    mm2Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    mm2Btn.TextSize = isMobile and 16 or 18
    mm2Btn.Font = Enum.Font.GothamBold
    mm2Btn.Parent = mainFrame
    
    local mm2Corner = Instance.new("UICorner")
    mm2Corner.CornerRadius = UDim.new(0, 12)
    mm2Corner.Parent = mm2Btn
    
    local nightsBtn = Instance.new("TextButton")
    nightsBtn.Size = UDim2.new(0, 140, 0, 50)
    nightsBtn.Position = UDim2.new(0.5, 70, 1, -80)
    nightsBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    nightsBtn.Text = "Join 99 Nights"
    nightsBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    nightsBtn.TextSize = isMobile and 16 or 18
    nightsBtn.Font = Enum.Font.GothamBold
    nightsBtn.Parent = mainFrame
    
    local nightsCorner = Instance.new("UICorner")
    nightsCorner.CornerRadius = UDim.new(0, 12)
    nightsCorner.Parent = nightsBtn
    
    discordBtn.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard("https://discord.gg/qbBww8Xm")
            print("Discord link copied!")
        end
    end)
    
    mm2Btn.MouseButton1Click:Connect(function()
        TeleportService:Teleport(142823291, player)
    end)
    
    nightsBtn.MouseButton1Click:Connect(function()
        TeleportService:Teleport(NIGHTS_99_LOBBY_ID, player)
    end)
    
    return screenGui, blurEffect
end

-- If 99 Nights lobby, show lobby screen and exit
if currentGame == "99NIGHTS_LOBBY" then
    create99NightsLobbyScreen()
    return
end

-- If unsupported game, show screen and exit
if currentGame == "UNSUPPORTED" then
    createUnsupportedGameScreen()
    return
end

-- Global Variables
local Window = nil
local hubLoaded = false

-- MM2 Specific Functions (UNCHANGED - DO NOT MODIFY)
local function getPlayerRole(plr)
    if not plr or not plr.Character then return "Dead" end
    
    local character = plr.Character
    local backpack = plr:FindFirstChild("Backpack")
    
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return "Dead"
    end
    
    local hasGun = (character:FindFirstChild("Gun")) or (backpack and backpack:FindFirstChild("Gun"))
    local hasKnife = (character:FindFirstChild("Knife")) or (backpack and backpack:FindFirstChild("Knife"))
    
    if hasGun then
        return "Sheriff"
    elseif hasKnife then
        return "Murderer"
    else
        return "Innocent"
    end
end

-- MM2 Configuration (UNCHANGED - DO NOT MODIFY)
local MM2_CONFIG = {
    TWEEN_SPEED = 1,
    DELAY = 0.05,
    NOCLIP_ENABLED = true,
    PRIORITY_COINS = true,
}

-- MM2 Variables (UNCHANGED - DO NOT MODIFY)
local isCollecting = false
local noclipConnection = nil
local currentTween = nil
local collectLoop = nil
local isAutoShooting = false
local shootConnection = nil

-- MM2 Functions (UNCHANGED - DO NOT MODIFY)
local function enableNoclip()
    if noclipConnection then return end
    
    noclipConnection = RunService.Stepped:Connect(function()
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

local function findCollectibles()
    local items = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") then
            local objName = obj.Name:lower()
            
            if objName == "coin" or objName:find("coin") then
                table.insert(items, {obj = obj, type = "coin", priority = 1})
            elseif objName:find("beach") or objName:find("ball") or objName == "beachball" then
                table.insert(items, {obj = obj, type = "beachball", priority = 2})
            end
        end
    end
    
    if MM2_CONFIG.PRIORITY_COINS then
        table.sort(items, function(a, b) return a.priority < b.priority end)
    end
    
    return items
end

local function findDroppedGuns()
    local guns = {}
    
    local normalFolder = workspace:FindFirstChild("Normal")
    if not normalFolder then return guns end
    
    for _, obj in pairs(normalFolder:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name == "Gun" then
            local isOwned = false
            for _, plr in pairs(Players:GetPlayers()) do
                if plr.Character and obj:IsDescendantOf(plr.Character) then
                    isOwned = true
                    break
                end
                if plr.Backpack and obj:IsDescendantOf(plr.Backpack) then
                    isOwned = true
                    break
                end
            end
            
            if not isOwned then
                local handle = obj:FindFirstChild("Handle")
                if handle then
                    table.insert(guns, {
                        tool = obj,
                        handle = handle,
                        position = handle.Position
                    })
                end
            end
        end
    end
    
    return guns
end

local function startOptimizedCollection()
    if isCollecting then return end
    
    isCollecting = true
    enableNoclip()
    
    collectLoop = task.spawn(function()
        while isCollecting do
            local items = findCollectibles()
            
            if #items > 0 then
                local closest = nil
                local shortestDistance = math.huge
                
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local playerPos = player.Character.HumanoidRootPart.Position
                    
                    for _, item in pairs(items) do
                        if item.obj and item.obj.Parent then
                            local distance = (playerPos - item.obj.Position).Magnitude
                            if distance < shortestDistance then
                                shortestDistance = distance
                                closest = item
                            end
                        end
                    end
                end
                
                if closest and closest.obj and closest.obj.Parent and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = closest.obj.Position + Vector3.new(0, 1, 0)
                    
                    if currentTween then
                        currentTween:Cancel()
                    end
                    
                    local tweenInfo = TweenInfo.new(
                        MM2_CONFIG.TWEEN_SPEED,
                        Enum.EasingStyle.Quad,
                        Enum.EasingDirection.Out,
                        0,
                        false,
                        0
                    )
                    
                    currentTween = TweenService:Create(
                        player.Character.HumanoidRootPart,
                        tweenInfo,
                        {CFrame = CFrame.new(targetPos)}
                    )
                    
                    currentTween:Play()
                end
            end
            
            task.wait(MM2_CONFIG.DELAY)
        end
    end)
end

local function stopCollection()
    isCollecting = false
    disableNoclip()
    
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    
    if collectLoop then
        task.cancel(collectLoop)
        collectLoop = nil
    end
end

local function findMurderer()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and getPlayerRole(plr) == "Murderer" then
            return plr
        end
    end
    return nil
end

local function startAimbot()
    if isAutoShooting then return end
    
    isAutoShooting = true
    enableNoclip()
    
    shootConnection = RunService.Heartbeat:Connect(function()
        if not isAutoShooting then
            shootConnection:Disconnect()
            return
        end
        
        local murderer = findMurderer()
        
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local gun = player.Character:FindFirstChild("Gun") or 
                          (player.Backpack and player.Backpack:FindFirstChild("Gun"))
                
                if gun and gun.Parent == player.Backpack then
                    player.Character.Humanoid:EquipTool(gun)
                end
                
                gun = player.Character:FindFirstChild("Gun")
                
                if gun then
                    local murdererPos = murderer.Character.HumanoidRootPart.Position
                    local murdererCFrame = murderer.Character.HumanoidRootPart.CFrame
                    local behindPos = murdererPos - murdererCFrame.LookVector * 10
                    behindPos = behindPos + Vector3.new(0, 2, 0)
                    
                    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                    local tween = TweenService:Create(
                        player.Character.HumanoidRootPart,
                        tweenInfo,
                        {CFrame = CFrame.lookAt(behindPos, murdererPos)}
                    )
                    tween:Play()
                    
                    gun:Activate()
                end
            end
        end
        
        task.wait(MM2_CONFIG.DELAY)
    end)
end

local function stopAimbot()
    isAutoShooting = false
    disableNoclip()
    
    if shootConnection then
        shootConnection:Disconnect()
        shootConnection = nil
    end
end

-- 99 Nights Specific Functions (ENHANCED WITH DYNAMIC DROPDOWNS)
local selectedCreature = "Bear"
local selectedItem = ""
local hitboxSize = 70
local hitboxVisualization = nil
local originalHitboxSizes = {}
local modifiedCreatures = {}

-- All creatures from the wiki images (ADDED BUNNY)
local creatureNames = {
    "Arctic Fox", "Mammoth", "The Owl", "Polar Bear", "The Deer",
    "Alien", "Alien Elite", "Cultist", "Crossbow Cultist", 
    "Juggernaut Cultist", "Wolf", "Alpha Wolf", "Bear", "Bunny"
}

-- Dynamic creature scanning
local function scanWorkspaceForCreatures()
    local foundCreatures = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name
            local found = false
            
            -- Check against known creatures
            for _, knownCreature in pairs(creatureNames) do
                if objName:lower():find(knownCreature:lower()) or 
                   objName:lower():find(knownCreature:lower():gsub("the ", "")) or
                   objName:lower():find(knownCreature:lower():gsub(" ", "")) then
                    found = true
                    break
                end
            end
            
            if found and not foundCreatures[objName] then
                foundCreatures[objName] = true
            end
        end
    end
    
    local result = {}
    for name, _ in pairs(foundCreatures) do
        table.insert(result, name)
    end
    
    table.sort(result)
    return result
end

-- Dynamic item scanning
local function scanWorkspaceForItems()
    local foundItems = {}
    local itemTypes = {
        "wood", "log", "stone", "rock", "coin", "gem", "crystal", 
        "berry", "fruit", "meat", "bone", "stick", "branch",
        "mushroom", "herb", "flower", "seed", "nut"
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") or obj:IsA("Model") then
            local objName = obj.Name:lower()
            
            for _, itemType in pairs(itemTypes) do
                if objName:find(itemType) then
                    if not foundItems[obj.Name] then
                        foundItems[obj.Name] = true
                    end
                    break
                end
            end
        end
    end
    
    local result = {}
    for name, _ in pairs(foundItems) do
        table.insert(result, name)
    end
    
    table.sort(result)
    return result
end

-- Advanced creature finding
local function findCreaturesInWorkspace(creatureName)
    local foundCreatures = {}
    local searchPatterns = {
        creatureName:lower(),
        creatureName:lower():gsub("the ", ""),
        creatureName:lower():gsub(" ", "")
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name:lower()
            
            for _, pattern in pairs(searchPatterns) do
                if objName:find(pattern) or objName == pattern then
                    table.insert(foundCreatures, obj)
                    break
                end
            end
        end
    end
    
    return foundCreatures
end

-- Working hitbox modification system
local function modifyCreatureHitbox(creatureName, newSize)
    local creatures = findCreaturesInWorkspace(creatureName)
    local modifiedCount = 0
    
    for _, creature in pairs(creatures) do
        if creature and creature.Parent then
            if not originalHitboxSizes[creature] then
                originalHitboxSizes[creature] = {}
            end
            
            for _, part in pairs(creature:GetDescendants()) do
                if part:IsA("BasePart") then
                    if not originalHitboxSizes[creature][part] then
                        originalHitboxSizes[creature][part] = part.Size
                    end
                    
                    local scaleFactor = newSize / 70
                    part.Size = originalHitboxSizes[creature][part] * scaleFactor
                    
                    if part.Name:find("HumanoidRootPart") or part.Name:find("Torso") then
                        part.CanCollide = true
                    end
                end
            end
            
            modifiedCreatures[creature] = true
            modifiedCount = modifiedCount + 1
        end
    end
    
    if modifiedCount > 0 then
        print("Modified " .. modifiedCount .. " " .. creatureName .. "(s) hitboxes to size " .. newSize)
        return true
    else
        print("No " .. creatureName .. " found to modify!")
        return false
    end
end

-- Reset all creature hitboxes
local function resetAllHitboxes()
    for creature, parts in pairs(originalHitboxSizes) do
        if creature and creature.Parent then
            for part, originalSize in pairs(parts) do
                if part and part.Parent then
                    part.Size = originalSize
                end
            end
        end
    end
    
    originalHitboxSizes = {}
    modifiedCreatures = {}
    print("All creature hitboxes reset to original sizes!")
end

-- Enhanced hitbox visualization
local function createHitboxVisualization(creatureName, size)
    if hitboxVisualization then
        hitboxVisualization:Destroy()
    end
    
    local creatures = findCreaturesInWorkspace(creatureName)
    if #creatures == 0 then
        print("No " .. creatureName .. " found for visualization!")
        return
    end
    
    local creature = creatures[1]
    local rootPart = creature:FindFirstChild("HumanoidRootPart") or 
                    creature:FindFirstChild("Torso") or
                    creature:FindFirstChildOfClass("BasePart")
    
    if not rootPart then
        print("No suitable part found for visualization!")
        return
    end
    
    local visualPart = Instance.new("Part")
    visualPart.Name = "HitboxVisualization"
    visualPart.Size = Vector3.new(size, size, size)
    visualPart.CFrame = rootPart.CFrame
    visualPart.Anchored = true
    visualPart.CanCollide = false
    visualPart.Transparency = 0.6
    visualPart.Material = Enum.Material.ForceField
    visualPart.BrickColor = BrickColor.new("Bright red")
    visualPart.Shape = Enum.PartType.Ball
    visualPart.Parent = workspace
    
    hitboxVisualization = visualPart
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if creature and creature.Parent and rootPart and rootPart.Parent then
            visualPart.CFrame = rootPart.CFrame
        else
            connection:Disconnect()
            if visualPart and visualPart.Parent then
                visualPart:Destroy()
            end
        end
    end)
    
    print("Hitbox visualization created for " .. creatureName .. " with size " .. size)
end

-- Item spawning system
local function spawnSelectedItem(itemName)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        print("Character not found!")
        return
    end
    
    -- Find reference item in workspace
    local referenceItem = nil
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj.Name == itemName and (obj:IsA("Part") or obj:IsA("Model")) then
            referenceItem = obj
            break
        end
    end
    
    if not referenceItem then
        print("No reference " .. itemName .. " found in workspace!")
        return
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    local spawnCount = math.random(8, 15)
    
    print("Spawning " .. spawnCount .. " " .. itemName .. "(s)...")
    
    for i = 1, spawnCount do
        local angle = (i / spawnCount) * math.pi * 2
        local distance = math.random(10, 30)
        local spawnPos = playerPos + Vector3.new(
            math.cos(angle) * distance,
            math.random(2, 8),
            math.sin(angle) * distance
        )
        
        local newItem
        if referenceItem:IsA("Part") then
            newItem = referenceItem:Clone()
            newItem.Position = spawnPos
            newItem.Parent = workspace
        elseif referenceItem:IsA("Model") then
            newItem = referenceItem:Clone()
            if newItem:FindFirstChild("HumanoidRootPart") then
                newItem.HumanoidRootPart.Position = spawnPos
            elseif newItem:FindFirstChildOfClass("BasePart") then
                newItem:FindFirstChildOfClass("BasePart").Position = spawnPos
            end
            newItem.Parent = workspace
        end
        
        if newItem then
            -- Add collection functionality
            task.spawn(function()
                local function collectItem()
                    if newItem and newItem.Parent then
                        newItem.Position = playerPos + Vector3.new(0, i * 0.5, 0)
                        task.wait(1)
                        if newItem and newItem.Parent then
                            newItem:Destroy()
                            print("Collected " .. itemName .. "!")
                        end
                    end
                end
                
                if newItem:IsA("Part") then
                    local detector = Instance.new("ClickDetector")
                    detector.MaxActivationDistance = 50
                    detector.Parent = newItem
                    detector.MouseClick:Connect(collectItem)
                elseif newItem:IsA("Model") then
                    local mainPart = newItem:FindFirstChildOfClass("BasePart")
                    if mainPart then
                        local detector = Instance.new("ClickDetector")
                        detector.MaxActivationDistance = 50
                        detector.Parent = mainPart
                        detector.MouseClick:Connect(collectItem)
                    end
                end
            end)
        end
        
        task.wait(0.1)
    end
    
    -- Auto-collect all spawned items after delay
    task.wait(2)
    print("Auto-collecting all " .. itemName .. "s...")
    
    for _, obj in pairs(workspace:GetChildren()) do
        if obj.Name == itemName and (obj:IsA("Part") or obj:IsA("Model")) then
            if obj:IsA("Part") then
                obj.Position = playerPos + Vector3.new(
                    math.random(-5, 5),
                    math.random(3, 8),
                    math.random(-5, 5)
                )
            elseif obj:IsA("Model") and obj:FindFirstChildOfClass("BasePart") then
                obj:FindFirstChildOfClass("BasePart").Position = playerPos + Vector3.new(
                    math.random(-5, 5),
                    math.random(3, 8),
                    math.random(-5, 5)
                )
            end
            
            task.wait(0.1)
            task.spawn(function()
                task.wait(1.5)
                if obj and obj.Parent then
                    obj:Destroy()
                end
            end)
        end
    end
    
    print("All " .. itemName .. "s collected!")
end

-- Hub Creation Function
local function createHub()
    if hubLoaded then return end
    hubLoaded = true
    
    local success, WindUI = pcall(function()
        return loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
    end)
    
    if not success then
        warn("Failed to load WindUI library")
        return
    end

    local windowTitle = currentGame == "MM2" and "Samurai Hub - MM2" or "Samurai Hub - 99 Nights"
    local windowAuthor = currentGame == "MM2" and "MM2 Exclusive Edition" or "99 Nights Edition"

    Window = WindUI:CreateWindow({
        Title = windowTitle,
        Icon = "rbxassetid://99224451763710",
        Author = windowAuthor,
        Folder = "SamuraiHub",
        Size = isMobile and UDim2.fromOffset(500, 400) or UDim2.fromOffset(580, 325),
        Transparent = true,
        Theme = "Dark",
        Resizable = true,
        SideBarWidth = isMobile and 150 or 200,
    })

    -- Create tabs based on game
    local tabs = {}
    
    if currentGame == "MM2" then
        -- ALL MM2 TABS RESTORED (UNCHANGED - DO NOT MODIFY)
        tabs.CreditsTab = Window:Tab({Title = "Credits", Icon = "info"})
        tabs.EspTab = Window:Tab({Title = "ESP", Icon = "eye"})
        tabs.MurderTab = Window:Tab({Title = "Murder", Icon = "zap"})
        tabs.SheriffTab = Window:Tab({Title = "Sheriff", Icon = "shield"})
        tabs.InnocentTab = Window:Tab({Title = "Innocent", Icon = "user"})
        tabs.RandomTab = Window:Tab({Title = "Random", Icon = "settings"})
        tabs.AutoGrindTab = Window:Tab({Title = "Auto Grind", Icon = "circle-play"})
        
        -- Credits Tab - Updated with contributors
        tabs.CreditsTab:Section({Title = "Team Credits"})
        tabs.CreditsTab:Paragraph({
            Title = "Owner",
            Desc = "• Revborn"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Co-Owners",
            Desc = "• Kandeziareborn\n• Devy"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Contributors",
            Desc = "• None"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Lead Tester",
            Desc = "• Akira"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "• guyonphilippines"
        })
        tabs.CreditsTab:Paragraph({
            Title = "YouTubers",
            Desc = "• Flaxan\n• Mark"
        })

        -- ESP Tab (UNCHANGED - DO NOT MODIFY)
        tabs.EspTab:Section({Title = "Enhanced ESP System"})
        
        tabs.EspTab:Button({
            Title = "Player ESP",
            Desc = "Shows roles with colors",
            Callback = function()
                local function createESP(targetPlayer)
                    if targetPlayer == player then return end
                    
                    local function addESP(char)
                        if not char then return end
                        local hrp = char:WaitForChild("HumanoidRootPart", 5)
                        if not hrp then return end
                        
                        for _, v in pairs(char:GetChildren()) do
                            if v.Name == "SamuraiESP" then v:Destroy() end
                        end
                        
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "SamuraiESP"
                        billboard.Parent = hrp
                        billboard.Size = UDim2.new(0, 200, 0, 100)
                        billboard.StudsOffset = Vector3.new(0, 3, 0)
                        billboard.AlwaysOnTop = true
                        
                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Parent = billboard
                        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Text = targetPlayer.Name
                        nameLabel.TextColor3 = Color3.new(1, 1, 1)
                        nameLabel.TextStrokeTransparency = 0
                        nameLabel.Font = Enum.Font.GothamBold
                        nameLabel.TextSize = 16
                        nameLabel.TextScaled = true
                        
                        local roleLabel = Instance.new("TextLabel")
                        roleLabel.Parent = billboard
                        roleLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        roleLabel.Position = UDim2.new(0, 0, 0.5, 0)
                        roleLabel.BackgroundTransparency = 1
                        roleLabel.TextStrokeTransparency = 0
                        roleLabel.Font = Enum.Font.Gotham
                        roleLabel.TextSize = 14
                        roleLabel.TextScaled = true
                        
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "SamuraiESP"
                        highlight.Parent = char
                        highlight.FillTransparency = 0.7
                        highlight.OutlineTransparency = 0
                        
                        local function updateESP()
                            local role = getPlayerRole(targetPlayer)
                            local colors = {
                                Sheriff = Color3.fromRGB(0, 100, 255),
                                Murderer = Color3.fromRGB(255, 0, 0),
                                Innocent = Color3.fromRGB(0, 255, 0),
                                Dead = Color3.fromRGB(128, 128, 128)
                            }
                            
                            local color = colors[role] or Color3.new(1, 1, 1)
                            roleLabel.Text = role
                            roleLabel.TextColor3 = color
                            highlight.FillColor = color
                        end
                        
                        updateESP()
                        RunService.Heartbeat:Connect(updateESP)
                    end
                    
                    if targetPlayer.Character then addESP(targetPlayer.Character) end
                    targetPlayer.CharacterAdded:Connect(addESP)
                end
                
                for _, plr in pairs(Players:GetPlayers()) do
                    createESP(plr)
                end
                Players.PlayerAdded:Connect(createESP)
                print("Player ESP activated!")
            end
        })
        
        tabs.EspTab:Button({
            Title = "Gun ESP",
            Desc = "Shows dropped guns",
            Callback = function()
                _G.GunESP = true
                
                local function createGunESP()
                    for _, obj in pairs(workspace:GetDescendants()) do
                        if obj.Name == "SamuraiGunESP" then
                            obj:Destroy()
                        end
                    end
                    
                    local guns = findDroppedGuns()
                    
                    for _, gunData in pairs(guns) do
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "SamuraiGunESP"
                        billboard.Parent = gunData.handle
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.StudsOffset = Vector3.new(0, 3, 0)
                        billboard.AlwaysOnTop = true
                        
                        local label = Instance.new("TextLabel")
                        label.Parent = billboard
                        label.Size = UDim2.new(1, 0, 1, 0)
                        label.BackgroundTransparency = 1
                        label.Text = "GUN"
                        label.TextColor3 = Color3.fromRGB(255, 215, 0)
                        label.TextStrokeTransparency = 0
                        label.Font = Enum.Font.GothamBold
                        label.TextSize = 18
                        label.TextScaled = true
                        
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "SamuraiGunESP"
                        highlight.Parent = gunData.tool
                        highlight.FillColor = Color3.fromRGB(255, 215, 0)
                        highlight.FillTransparency = 0.5
                        highlight.OutlineTransparency = 0
                    end
                end
                
                createGunESP()
                
                task.spawn(function()
                    while _G.GunESP do
                        task.wait(1.5)
                        if _G.GunESP then
                            createGunESP()
                        end
                    end
                end)
                
                print("Gun ESP activated!")
            end
        })
        
        -- Murder Tab (UNCHANGED - DO NOT MODIFY)
        tabs.MurderTab:Section({Title = "Murderer Features"})
        
        tabs.MurderTab:Toggle({
            Title = "Auto Kill",
            Desc = "Automatically kill players",
            Default = false,
            Callback = function(state)
                _G.AutoKill = state
                if state then
                    task.spawn(function()
                        while _G.AutoKill do
                            if player.Character and getPlayerRole(player) == "Murderer" then
                                local knife = player.Character:FindFirstChild("Knife") or 
                                            player.Backpack:FindFirstChild("Knife")
                                
                                if knife and knife.Parent == player.Backpack then
                                    player.Character.Humanoid:EquipTool(knife)
                                    task.wait(0.1)
                                end
                                
                                for _, target in pairs(Players:GetPlayers()) do
                                    if target ~= player then
                                        local targetRole = getPlayerRole(target)
                                        
                                        if targetRole ~= "Dead" and target.Character and 
                                           target.Character:FindFirstChild("HumanoidRootPart") and
                                           target.Character.Humanoid.Health > 0 then
                                            
                                            player.Character.HumanoidRootPart.CFrame = 
                                                target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
                                            
                                            if player.Character:FindFirstChild("Knife") then
                                                player.Character.Knife:Activate()
                                            end
                                            
                                            task.wait(MM2_CONFIG.DELAY)
                                        end
                                    end
                                end
                            end
                            task.wait(0.3)
                        end
                    end)
                    print("Auto Kill enabled")
                else
                    print("Auto Kill disabled")
                end
            end
        })
        
        tabs.MurderTab:Button({
            Title = "Kill All",
            Desc = "Kill all players instantly",
            Callback = function()
                if player.Character and getPlayerRole(player) == "Murderer" then
                    local knife = player.Character:FindFirstChild("Knife") or 
                                player.Backpack:FindFirstChild("Knife")
                    
                    if knife and knife.Parent == player.Backpack then
                        player.Character.Humanoid:EquipTool(knife)
                        task.wait(0.1)
                    end
                    
                    for _, target in pairs(Players:GetPlayers()) do
                        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                            player.Character.HumanoidRootPart.CFrame = 
                                target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
                            
                            if player.Character:FindFirstChild("Knife") then
                                player.Character.Knife:Activate()
                            end
                            
                            task.wait(0.1)
                        end
                    end
                    
                    print("Kill All executed!")
                else
                    print("You need to be the murderer!")
                end
            end
        })

        -- Sheriff Tab (UNCHANGED - DO NOT MODIFY)
        tabs.SheriffTab:Section({Title = "Sheriff Features"})
        
        tabs.SheriffTab:Toggle({
            Title = "Aimbot",
            Desc = "Auto aim at murderer",
            Default = false,
            Callback = function(state)
                if state then
                    startAimbot()
                    print("Aimbot activated!")
                else
                    stopAimbot()
                    print("Aimbot deactivated")
                end
            end
        })
        
        tabs.SheriffTab:Button({
            Title = "Auto Shoot Murderer",
            Desc = "Instantly shoot the murderer",
            Callback = function()
                local murderer = findMurderer()
                if murderer and murderer.Character then
                    local gun = player.Character:FindFirstChild("Gun") or 
                              (player.Backpack and player.Backpack:FindFirstChild("Gun"))
                    
                    if gun and gun.Parent == player.Backpack then
                        player.Character.Humanoid:EquipTool(gun)
                        task.wait(0.1)
                    end
                    
                    gun = player.Character:FindFirstChild("Gun")
                    if gun then
                        player.Character.HumanoidRootPart.CFrame = 
                            murderer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -10)
                        gun:Activate()
                        print("Shot at murderer!")
                    end
                else
                    print("No murderer found!")
                end
            end
        })

        -- Innocent Tab (UNCHANGED - DO NOT MODIFY)
        tabs.InnocentTab:Section({Title = "Innocent Features"})
        
        tabs.InnocentTab:Button({
            Title = "Teleport to Gun",
            Desc = "Teleport to dropped gun",
            Callback = function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    print("Character not found!")
                    return
                end
                
                local guns = findDroppedGuns()
                
                if #guns > 0 then
                    local playerPos = player.Character.HumanoidRootPart.Position
                    local closestGun = nil
                    local shortestDistance = math.huge
                    
                    for _, gunData in pairs(guns) do
                        local distance = (playerPos - gunData.position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            closestGun = gunData
                        end
                    end
                    
                    if closestGun then
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(closestGun.position + Vector3.new(0, 5, 0))
                        print("Teleported to dropped gun!")
                    else
                        print("No valid gun found!")
                    end
                else
                    print("No dropped guns detected!")
                end
            end
        })
        
        -- Player teleportation section (UNCHANGED - DO NOT MODIFY)
        tabs.InnocentTab:Section({Title = "Player Teleportation"})
        
        local function getOnlinePlayers()
            local playerList = {}
            for _, plr in pairs(Players:GetPlayers()) do
                if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    table.insert(playerList, plr.Name)
                end
            end
            return playerList
        end
        
        local selectedPlayer = ""
        
        local playerDropdown = tabs.InnocentTab:Dropdown({
            Title = "Select Player",
            Values = getOnlinePlayers(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedPlayer = value or ""
            end
        })
        
        tabs.InnocentTab:Button({
            Title = "Teleport to Player",
            Desc = "Teleport to selected player",
            Callback = function()
                if selectedPlayer ~= "" then
                    local targetPlayer = Players:FindFirstChild(selectedPlayer)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        player.Character.HumanoidRootPart.CFrame = 
                            targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
                        print("Teleported to " .. selectedPlayer)
                    end
                end
            end
        })
        
        -- Update dropdown regularly (UNCHANGED - DO NOT MODIFY)
        task.spawn(function()
            while task.wait(3) do
                if playerDropdown then
                    local newList = getOnlinePlayers()
                    playerDropdown:SetValues(newList)
                    
                    if selectedPlayer ~= "" then
                        local found = false
                        for _, name in pairs(newList) do
                            if name == selectedPlayer then
                                found = true
                                break
                            end
                        end
                        if not found then
                            selectedPlayer = ""
                        end
                    end
                end
            end
        end)

        -- Random Tab (UNCHANGED - DO NOT MODIFY)
        tabs.RandomTab:Section({Title = "Movement Features"})
        
        tabs.RandomTab:Toggle({
            Title = "Speed Boost",
            Desc = "Increase walking speed",
            Default = false,
            Callback = function(state)
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    player.Character.Humanoid.WalkSpeed = state and 50 or 16
                end
            end
        })
        
        tabs.RandomTab:Toggle({
            Title = "Jump Boost",
            Desc = "Increase jump power",
            Default = false,
            Callback = function(state)
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    player.Character.Humanoid.JumpPower = state and 120 or 50
                end
            end
        })
        
        tabs.RandomTab:Toggle({
            Title = "Noclip",
            Desc = "Walk through walls",
            Default = false,
            Callback = function(state)
                if state then
                    enableNoclip()
                else
                    disableNoclip()
                end
            end
        })

        tabs.RandomTab:Toggle({
            Title = "Infinite Jump",
            Desc = "Enable infinite jumping",
            Default = false,
            Callback = function(state)
                _G.InfiniteJump = state
                
                if _G.InfiniteJump then
                    _G.InfiniteJumpConnection = UserInputService.JumpRequest:Connect(function()
                        if player.Character and player.Character:FindFirstChild("Humanoid") then
                            player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end)
                    print("Infinite Jump enabled!")
                else
                    if _G.InfiniteJumpConnection then
                        _G.InfiniteJumpConnection:Disconnect()
                        _G.InfiniteJumpConnection = nil
                    end
                    print("Infinite Jump disabled!")
                end
            end
        })

        tabs.RandomTab:Button({
            Title = "Toggle Anti Void",
            Desc = "Creates/removes baseplate to prevent falling",
            Callback = function()
                if _G.AntiVoidPlatform then
                    _G.AntiVoidPlatform:Destroy()
                    _G.AntiVoidPlatform = nil
                    print("Anti Void platform removed!")
                else
                    local platform = Instance.new("Part")
                    platform.Name = "AntiVoidPlatform"
                    platform.Size = Vector3.new(2048, 16, 2048)
                    platform.Position = Vector3.new(0, -500, 0)
                    platform.Anchored = true
                    platform.CanCollide = true
                    platform.Material = Enum.Material.Plastic
                    platform.BrickColor = BrickColor.new("Bright green")
                    platform.TopSurface = Enum.SurfaceType.Smooth
                    platform.BottomSurface = Enum.SurfaceType.Smooth
                    platform.Parent = workspace
                    
                    _G.AntiVoidPlatform = platform
                    print("Anti Void platform created!")
                end
            end
        })

        -- Auto Grind Tab (UNCHANGED - DO NOT MODIFY)
        tabs.AutoGrindTab:Section({Title = "Collection System"})
        
        tabs.AutoGrindTab:Toggle({
            Title = "Auto Collect Coins",
            Desc = "Automatically collect coins and beach balls",
            Default = false,
            Callback = function(state)
                if state then
                    print("Starting collection system...")
                    startOptimizedCollection()
                    print("Auto collection activated!")
                else
                    stopCollection()
                    print("Auto collection deactivated")
                end
            end
        })
        
        -- FIXED SLIDER (UNCHANGED - DO NOT MODIFY)
        tabs.AutoGrindTab:Slider({
            Title = "Collection Speed",
            Step = 0.1,
            Value = {
                Min = 0.1,
                Max = 5,
                Default = 1,
            },
            Callback = function(value)
                MM2_CONFIG.TWEEN_SPEED = value
                print("Collection speed set to: " .. value)
            end
        })
        
    elseif currentGame == "99NIGHTS" then
        -- 99 Nights Tabs (ENHANCED WITH DYNAMIC DROPDOWNS)
        tabs.CreditsTab = Window:Tab({Title = "Credits", Icon = "info"})
        tabs.CreaturesTab = Window:Tab({Title = "Creatures", Icon = "zap"})
        tabs.WorldTab = Window:Tab({Title = "World Features", Icon = "globe"})
        
        -- 99 Nights Credits Tab
        tabs.CreditsTab:Section({Title = "Team Credits"})
        tabs.CreditsTab:Paragraph({
            Title = "Owner",
            Desc = "• Revborn"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Co-Owners",
            Desc = "• Kandeziareborn\n• Devy"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Contributors",
            Desc = "• None"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Lead Tester",
            Desc = "• Akira"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "• guyonphilippines"
        })
        tabs.CreditsTab:Paragraph({
            Title = "YouTubers",
            Desc = "• Flaxan\n• Mark"
        })
        
        -- Enhanced Creatures Tab with DYNAMIC DROPDOWNS
        tabs.CreaturesTab:Section({Title = "Dynamic Creature System"})
        
        local creatureDropdown = tabs.CreaturesTab:Dropdown({
            Title = "Select Creature",
            Values = scanWorkspaceForCreatures(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedCreature = value or "Bear"
                print("Selected creature: " .. selectedCreature)
            end
        })
        
        -- Auto-update creature dropdown every 5 seconds
        task.spawn(function()
            while task.wait(5) do
                if creatureDropdown then
                    local newCreatures = scanWorkspaceForCreatures()
                    creatureDropdown:SetValues(newCreatures)
                    print("Creature dropdown updated - Found: " .. table.concat(newCreatures, ", "))
                end
            end
        end)
        
        -- Working hitbox slider
        tabs.CreaturesTab:Slider({
            Title = "Hitbox Size",
            Step = 1,
            Value = {
                Min = 10,
                Max = 200,
                Default = 70,
            },
            Callback = function(value)
                hitboxSize = value
                print("Hitbox size set to: " .. value)
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Show Hitbox Visualization",
            Desc = "Display visual hitbox for selected creature",
            Callback = function()
                createHitboxVisualization(selectedCreature, hitboxSize)
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Modify Creature Hitbox",
            Desc = "Actually increase the creature's hitbox size",
            Callback = function()
                modifyCreatureHitbox(selectedCreature, hitboxSize)
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Modify ALL Creatures",
            Desc = "Apply hitbox size to all creatures in workspace",
            Callback = function()
                local allCreatures = scanWorkspaceForCreatures()
                local totalModified = 0
                print("Modifying all creatures with size " .. hitboxSize .. "...")
                
                for _, creatureName in pairs(allCreatures) do
                    if modifyCreatureHitbox(creatureName, hitboxSize) then
                        totalModified = totalModified + 1
                    end
                    task.wait(0.2)
                end
                
                print("Successfully modified " .. totalModified .. " creature types!")
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Reset All Hitboxes",
            Desc = "Restore all creatures to original sizes",
            Callback = function()
                resetAllHitboxes()
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Hide Visualization",
            Desc = "Remove hitbox visualization",
            Callback = function()
                if hitboxVisualization then
                    hitboxVisualization:Destroy()
                    hitboxVisualization = nil
                    print("Hitbox visualization removed")
                end
            end
        })
        
        -- Enhanced World Features Tab with DYNAMIC ITEM DROPDOWN
        tabs.WorldTab:Section({Title = "Dynamic Item Spawning"})
        
        local itemDropdown = tabs.WorldTab:Dropdown({
            Title = "Select Item to Spawn",
            Values = scanWorkspaceForItems(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedItem = value or ""
                print("Selected item: " .. selectedItem)
            end
        })
        
        -- Auto-update item dropdown every 5 seconds
        task.spawn(function()
            while task.wait(5) do
                if itemDropdown then
                    local newItems = scanWorkspaceForItems()
                    itemDropdown:SetValues(newItems)
                    print("Item dropdown updated - Found: " .. table.concat(newItems, ", "))
                end
            end
        end)
        
        tabs.WorldTab:Button({
            Title = "Spawn Selected Item",
            Desc = "Spawns the selected item around player",
            Callback = function()
                if selectedItem ~= "" then
                    spawnSelectedItem(selectedItem)
                else
                    print("Please select an item first!")
                end
            end
        })
        
        tabs.WorldTab:Button({
            Title = "Clear All Spawned Items",
            Desc = "Remove all spawned items",
            Callback = function()
                if selectedItem ~= "" then
                    local removed = 0
                    for _, obj in pairs(workspace:GetChildren()) do
                        if obj.Name == selectedItem then
                            obj:Destroy()
                            removed = removed + 1
                        end
                    end
                    print("Removed " .. removed .. " spawned " .. selectedItem .. "(s)!")
                else
                    print("No item selected!")
                end
            end
        })
        
        tabs.WorldTab:Section({Title = "General Collection"})
        
        tabs.WorldTab:Button({
            Title = "Collect All Items",
            Desc = "Teleport all collectible items to player",
            Callback = function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    print("Character not found!")
                    return
                end
                
                local playerPos = player.Character.HumanoidRootPart.Position
                local collected = 0
                
                for _, obj in pairs(workspace:GetDescendants()) do
                    if obj:IsA("Part") then
                        local name = obj.Name:lower()
                        if name:find("wood") or name:find("log") or name:find("item") or 
                           name:find("coin") or name:find("gem") or name:find("crystal") or
                           name:find("berry") or name:find("meat") or name:find("bone") then
                            obj.Position = playerPos + Vector3.new(0, collected * 0.5, 0)
                            collected = collected + 1
                            
                            if collected >= 50 then break end -- Prevent lag
                        end
                    end
                end
                
                print("Collected " .. collected .. " items!")
            end
        })
        
        tabs.WorldTab:Button({
            Title = "Scan Workspace",
            Desc = "List all creatures and items in workspace",
            Callback = function()
                print("=== WORKSPACE SCAN ===")
                local foundCreatures = scanWorkspaceForCreatures()
                local foundItems = scanWorkspaceForItems()
                
                print("CREATURES FOUND (" .. #foundCreatures .. "):")
                for _, name in pairs(foundCreatures) do
                    print("- " .. name)
                end
                
                print("ITEMS FOUND (" .. #foundItems .. "):")
                for _, name in pairs(foundItems) do
                    print("- " .. name)
                end
                
                print("=== SCAN COMPLETE ===")
            end
        })
    end

    print("Samurai Hub " .. currentGame .. " Edition loaded successfully!")
end

-- Enhanced Toggle Button (UNCHANGED)
local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SamuraiToggle"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false

    local button = Instance.new("ImageButton")
    button.Size = isMobile and UDim2.new(0, 80, 0, 80) or UDim2.new(0, 70, 0, 70)
    button.Position = UDim2.new(0, 50, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    button.BackgroundTransparency = 0.2
    button.Image = "rbxassetid://99224451763710"
    button.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.5, 0)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 3
    stroke.Color = Color3.new(1, 1, 1)
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = button
    
    -- Make draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    local isOpen = true
    button.MouseButton1Click:Connect(function()
        if Window then
            if isOpen then
                Window:Close()
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                button.BackgroundTransparency = 0.5
                isOpen = false
            else
                Window:Open()
                button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                button.BackgroundTransparency = 0.2
                isOpen = true
            end
        end
    end)
end

-- Key System (UNCHANGED)
if isKeySaved() then
    print("Key already saved, loading hub...")
    createHub()
    task.spawn(function()
        task.wait(2)
        createToggleButton()
    end)
else
    print("Creating key system...")
    
    local keyGui = Instance.new("ScreenGui")
    keyGui.Name = "SamuraiKeySystem"
    keyGui.Parent = player.PlayerGui
    keyGui.ResetOnSpawn = false
    
    local frameSize = isMobile and UDim2.new(0, 380, 0, 320) or UDim2.new(0, 420, 0, 300)
    
    local frame = Instance.new("Frame")
    frame.Size = frameSize
    frame.Position = UDim2.new(0.5, -frameSize.X.Offset/2, 0.5, -frameSize.Y.Offset/2)
    frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    frame.BorderSizePixel = 0
    frame.Parent = keyGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = frame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(60, 60, 60)
    stroke.Thickness = 2
    stroke.Parent = frame
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 15)),
        ColorSequenceKeypoint.new(0.7, Color3.fromRGB(25, 15, 15)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
    }
    gradient.Parent = frame
    
    local gameTitle = currentGame == "MM2" and "MM2 Exclusive Edition" or "99 Nights Edition"
    local welcomeMessage = currentGame == "MM2" and "Ready for MM2 domination?" or "Ready for 99 Nights survival?"
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, frameSize.X.Offset - 70, 0, 50)
    title.Position = UDim2.new(0, 35, 0, 25)
    title.BackgroundTransparency = 1
    title.Text = "Samurai Hub"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = frame
    
    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(0, frameSize.X.Offset - 70, 0, 20)
    subtitle.Position = UDim2.new(0, 35, 0, 70)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = gameTitle
    subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    subtitle.TextSize = isMobile and 11 or 13
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextXAlignment = Enum.TextXAlignment.Left
    subtitle.Parent = frame
    
    local inputWidth = frameSize.X.Offset - 70
    
    local keyInput = Instance.new("TextBox")
    keyInput.Size = UDim2.new(0, inputWidth, 0, isMobile and 40 or 35)
    keyInput.Position = UDim2.new(0, 35, 0, 110)
    keyInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    keyInput.TextColor3 = Color3.new(0, 0, 0)
    keyInput.PlaceholderText = "Enter your key here..."
    keyInput.PlaceholderColor3 = Color3.fromRGB(100, 100, 100)
    keyInput.Text = ""
    keyInput.TextSize = isMobile and 16 or 14
    keyInput.Font = Enum.Font.Gotham
    keyInput.TextXAlignment = Enum.TextXAlignment.Left
    keyInput.Parent = frame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 8)
    inputCorner.Parent = keyInput
    
    local buttonWidth = (inputWidth - 20) / 2
    local buttonHeight = isMobile and 40 or 35
    
    local submitBtn = Instance.new("TextButton")
    submitBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
    submitBtn.Position = UDim2.new(0, 35, 0, isMobile and 170 or 160)
    submitBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    submitBtn.Text = "Submit Key"
    submitBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
    submitBtn.TextSize = isMobile and 16 or 14
    submitBtn.Font = Enum.Font.GothamBold
    submitBtn.Parent = frame
    
    local submitCorner = Instance.new("UICorner")
    submitCorner.CornerRadius = UDim.new(0, 8)
    submitCorner.Parent = submitBtn
    
    local getKeyBtn = Instance.new("TextButton")
    getKeyBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
    getKeyBtn.Position = UDim2.new(0, 45 + buttonWidth, 0, isMobile and 170 or 160)
    getKeyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    getKeyBtn.Text = "Get Key"
    getKeyBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
    getKeyBtn.TextSize = isMobile and 16 or 14
    getKeyBtn.Font = Enum.Font.GothamBold
    getKeyBtn.Parent = frame
    
    local getKeyCorner = Instance.new("UICorner")
    getKeyCorner.CornerRadius = UDim.new(0, 8)
    getKeyCorner.Parent = getKeyBtn
    
    local welcome = Instance.new("TextLabel")
    welcome.Size = UDim2.new(0, inputWidth, 0, 25)
    welcome.Position = UDim2.new(0, 35, 0, isMobile and 230 or 220)
    welcome.BackgroundTransparency = 1
    welcome.Text = "Welcome (" .. player.Name .. ")"
    welcome.TextColor3 = Color3.new(1, 1, 1)
    welcome.TextSize = isMobile and 18 or 16
    welcome.Font = Enum.Font.GothamBold
    welcome.TextXAlignment = Enum.TextXAlignment.Left
    welcome.Parent = frame
    
    local welcomeDesc = Instance.new("TextLabel")
    welcomeDesc.Size = UDim2.new(0, inputWidth, 0, 20)
    welcomeDesc.Position = UDim2.new(0, 35, 0, isMobile and 255 or 245)
    welcomeDesc.BackgroundTransparency = 1
    welcomeDesc.Text = welcomeMessage
    welcomeDesc.TextColor3 = Color3.fromRGB(150, 150, 150)
    welcomeDesc.TextSize = isMobile and 14 or 12
    welcomeDesc.Font = Enum.Font.Gotham
    welcomeDesc.TextXAlignment = Enum.TextXAlignment.Left
    welcomeDesc.Parent = frame
    
    -- Make the frame draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            startPos = frame.Position
            dragStart = input.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    -- Button functionality
    submitBtn.MouseButton1Click:Connect(function()
        print("Checking key: " .. keyInput.Text .. " against: " .. REQUIRED_KEY)
        if keyInput.Text == REQUIRED_KEY then
            saveKey()
            keyGui:Destroy()
            print("Key accepted! Loading hub...")
            createHub()
            task.spawn(function()
                task.wait(2)
                createToggleButton()
            end)
        else
            keyInput.Text = ""
            keyInput.PlaceholderText = "Invalid key! Try again..."
            submitBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
            task.wait(2)
            keyInput.PlaceholderText = "Enter your key here..."
            submitBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        end
    end)
    
    getKeyBtn.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard("https://discord.gg/qbBww8Xm")
            keyInput.PlaceholderText = "Discord link copied! Get key from server"
            getKeyBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        else
            keyInput.PlaceholderText = "Visit: discord.gg/qbBww8Xm"
        end
        task.wait(3)
        keyInput.PlaceholderText = "Enter your key here..."
        getKeyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    end)
    
    keyInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            submitBtn.MouseButton1Click:Fire()
        end
    end)
    
    print("Key system created successfully!")
end

print("Samurai Hub initialized successfully!")
print("Current Game: " .. currentGame)
print("Required Key: " .. REQUIRED_KEY)
print("Discord: discord.gg/qbBww8Xm")

-- Auto-cleanup on character respawn (UNCHANGED)
player.CharacterAdded:Connect(function()
    task.wait(1)
    if isCollecting then
        enableNoclip()
    end
    if isAutoShooting then
        enableNoclip()
    end
end)

print("All systems loaded and ready!")
if currentGame == "MM2" then
    print("MM2 features available: ESP, Auto-Kill, Gun Teleport, Collection, Sheriff Aimbot, Random Features")
elseif currentGame == "99NIGHTS" then
    print("99 Nights features available: Dynamic Hitbox System, Real-time Item Spawning, Auto-updating Dropdowns")
end
print("Samurai Hub Complete Edition - Enhanced with dynamic dropdowns and real-time workspace scanning!")
